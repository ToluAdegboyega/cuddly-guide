{"version":3,"sources":["containers/PokemonList.js","redux/actions/pokemonActions.js","containers/Pokemon.js","assets/images/International_Pokémon_logo-300x110.webp","App.js","reportWebVitals.js","redux/reducers/PokemonListReducer.js","redux/reducers/PokemonMultipleReducer.js","redux/reducers/RootReducer.js","redux/Store.js","index.js"],"names":["PokemonList","props","dispatch","useDispatch","pokemonList","useSelector","state","useState","search","setSearch","currentPage","setCurrentPage","offset","fetchData","a","type","axios","get","res","payload","data","compare","b","comparison","name","useEffect","className","onChange","e","target","value","placeholder","onClick","history","push","_","isEmpty","loading","errorMsg","sort","slice","map","el","charAt","toUpperCase","to","pageCount","Math","ceil","count","pageRangeDisplayed","marginPagesDisplayed","onPageChange","selectedPage","selected","containerClassName","Pokemon","pokemonName","match","params","pokemon","pokemonState","pokeData","src","sprites","other","front_default","alt","stats","stat","base_stat","abilities","ability","showData","App","PokeLogo","width","height","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DefaultState","PokemonListReducer","action","results","PokemonMultipleReducer","RootReducer","combineReducers","Store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.605ce220.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport { GetPokemonList } from '../redux/actions/pokemonActions';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nconst PokemonList = (props) => {\r\n    const dispatch = useDispatch();\r\n    const pokemonList = useSelector(state => state.PokemonList);\r\n\r\n    const [search, setSearch] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n  \r\n    const perPage = 15;\r\n    const offset = currentPage * perPage;\r\n\r\n    function handlePageClick({ selected: selectedPage }) {\r\n        setCurrentPage(selectedPage);\r\n    }\r\n\r\n    const fetchData = () => {\r\n        dispatch(GetPokemonList());\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    function compare(a, b) {\r\n        let comparison = 0;\r\n        if (a.name > b.name) {\r\n            comparison = 1;\r\n        } else if (a.name < b.name) {\r\n            comparison = -1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const showData = () => {\r\n        if (!_.isEmpty(pokemonList.data)) {\r\n            return (\r\n                <div className={'list-wrapper'}>\r\n                    {pokemonList.data\r\n                    .sort(compare)\r\n                    .slice(offset, offset + perPage)\r\n                    .map(el => {\r\n                        return (\r\n                            <div className={'pokemon-item'} key={el.name}>\r\n                                <p>{el.name.charAt(0).toUpperCase() + el.name.slice(1)}</p>\r\n                                <Link to={`cuddly-guide/pokemon/${el.name}`}>View</Link>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            )\r\n        };\r\n\r\n        if (pokemonList.loading) {\r\n            return <p className={'loading-error'}>Loading...</p>\r\n        }\r\n\r\n        if (pokemonList.errorMsg !== '') {\r\n            return <p className={'loading-error'}>{pokemonList.errorMsg}</p>\r\n        }\r\n\r\n        return <p className={'loading-error'}>Unable to Get Data.</p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={'search-wrapper'}>\r\n                <input \r\n                    type =\"text\" \r\n                    onChange={e => setSearch(e.target.value)}\r\n                    placeholder='Enter A Pokemon Name'\r\n                />\r\n                <button onClick={() => props.history.push(`cuddly-guide/pokemon/${search}`)}>Search</button>\r\n            </div>\r\n            {showData()}\r\n            {!_.isEmpty(pokemonList.data) && (\r\n                <ReactPaginate\r\n                    pageCount={Math.ceil(pokemonList.count / perPage)}\r\n                    pageRangeDisplayed={2}\r\n                    marginPagesDisplayed={1}\r\n                    onPageChange={handlePageClick}\r\n                    containerClassName={'pagination'}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonList;\r\n","import axios from \"axios\";\r\n\r\nexport const GetPokemonList = () => async dispatch => {\r\n   try {\r\n        dispatch({\r\n            type: 'POKEMON_LIST_LOADING'\r\n        })\r\n\r\n       const res = await axios.get(`https://pokeapi.co/api/v2/pokemon?limit=1118}`);\r\n\r\n       dispatch({\r\n        type: 'POKEMON_LIST_SUCCESS',\r\n        payload: res.data\r\n    })\r\n   } catch (e) {\r\n        dispatch({\r\n            type: 'POKEMON_LIST_FAIL'\r\n        })\r\n   }\r\n};\r\n\r\nexport const GetPokemon = (pokemon) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: 'POKEMON_MULTIPLE_LOADING'\r\n        })\r\n\r\n       const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemon}`);\r\n\r\n       dispatch({\r\n        type: 'POKEMON_MULTIPLE_SUCCESS',\r\n        payload: res.data,\r\n        pokemonName: pokemon\r\n    })\r\n   } catch (e) {\r\n        dispatch({\r\n            type: 'POKEMON_MULTIPLE_FAIL'\r\n        })\r\n   }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GetPokemon } from '../redux/actions/pokemonActions';\r\nimport _ from 'lodash';\r\n\r\nconst Pokemon = (props) => {\r\n    const pokemonName = props.match.params.pokemon;\r\n    const dispatch = useDispatch();\r\n    const pokemonState = useSelector(state => state.Pokemon);\r\n\r\n    useEffect(() => {\r\n       dispatch(GetPokemon(pokemonName));\r\n    }, []);\r\n\r\n    const showData = () => {\r\n        if (!_.isEmpty(pokemonState.data[pokemonName])) {\r\n            const pokeData = pokemonState.data[pokemonName];\r\n            return (\r\n                <div className={'pokemon-wrapper'}>\r\n                    <div className={'pokemon-image'}>\r\n                        <img src={pokeData.sprites.other['official-artwork'].front_default} alt='' />\r\n                    </div>\r\n                    <div className={'pokemon-text'}>\r\n                        <div className={'pokemon-stat'}>\r\n                            <h1>Stats</h1>\r\n                            {pokeData.stats.map(el => {\r\n                                return <p key={el.stat.name}>\r\n                                    {el.stat.name.charAt(0).toUpperCase() + el.stat.name.slice(1)} - {el.base_stat}\r\n                                </p>\r\n                            })}\r\n                        </div>\r\n                        <div className={'pokemon-ability'}>\r\n                            <h1>Abilities</h1>\r\n                            {pokeData.abilities.map(el => {\r\n                                return <p key={el.ability.name}>\r\n                                    {el.ability.name.charAt(0).toUpperCase() + el.ability.name.slice(1)}\r\n                                </p>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        };\r\n\r\n        if (pokemonState.loading) {\r\n            return <p className={'loading-error'}>Loading...</p>\r\n        }\r\n\r\n        if (pokemonState.errorMsg !== '') {\r\n            return <p className={'loading-error'}>{pokemonState.errorMsg}</p>\r\n        }\r\n\r\n        return <p className={'loading-error'}>Unable to Get Data.</p>\r\n    }\r\n\r\n    return (\r\n        <div className={'poke'}>\r\n           <h1 className={'poke-name'}>{pokemonName.charAt(0).toUpperCase() + pokemonName.slice(1)}</h1>\r\n           {showData()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokemon;\r\n","export default __webpack_public_path__ + \"static/media/International_Pokémon_logo-300x110.1f967741.webp\";","import './assets/css/App.css';\r\nimport {Switch, Route, NavLink, Redirect} from 'react-router-dom';\r\nimport PokemonList from './containers/PokemonList';\r\nimport Pokemon from './containers/Pokemon';\r\nimport PokeLogo from './assets/images/International_Pokémon_logo-300x110.webp';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <nav>\r\n        <NavLink to={'/cuddly-guide'}>\r\n          <img src={PokeLogo} width=\"100\" height=\"50\" />\r\n        </NavLink>\r\n      </nav>\r\n      <Switch>\r\n        <Route path={'/cuddly-guide'} exact component={PokemonList} />\r\n        <Route path={'/cuddly-guide/pokemon/:pokemon'} exact component={Pokemon} />\r\n        {/* /pokemon/test\r\n         /pokemon/anything\r\n        */}\r\n        <Redirect to={'/cuddly-guide'} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const DefaultState = {\r\n    loading: false,\r\n    data: [],\r\n    errorMsg: '',\r\n    count: 0,\r\n}\r\n\r\nconst PokemonListReducer = (state = DefaultState, action) => {\r\n    switch(action.type) {\r\n        case 'POKEMON_LIST_LOADING':\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n            errorMsg: ''\r\n        }\r\n        case 'POKEMON_LIST_SUCCESS':\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            data: action.payload.results,\r\n            count: action.payload.count,\r\n            errorMsg: ''\r\n        }\r\n        case 'POKEMON_LIST_FAIL':\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            errorMsg: 'Unable to get Pokemon :('\r\n        }\r\n        default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default PokemonListReducer;","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: ''\r\n}\r\n\r\nconst PokemonMultipleReducer = (state = DefaultState, action) => {\r\n    switch(action.type) {\r\n        case 'POKEMON_MULTIPLE_LOADING':\r\n        return {\r\n            ...state,\r\n            loading: true,\r\n            errorMsg: ''\r\n        }\r\n        case 'POKEMON_MULTIPLE_SUCCESS':\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            errorMsg: '',\r\n            data: {\r\n                ...state.data,\r\n                [action.pokemonName]: action.payload\r\n            }\r\n        }\r\n        case 'POKEMON_MULTIPLE_FAIL':\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            errorMsg: 'Unable to find Pokemon :('\r\n        }\r\n        default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default PokemonMultipleReducer;","import { combineReducers } from \"redux\";\r\nimport PokemonListReducer from \"./PokemonListReducer\";\r\nimport PokemonMultipleReducer from \"./PokemonMultipleReducer\";\r\n\r\nconst RootReducer = combineReducers({\r\n    PokemonList: PokemonListReducer,\r\n    Pokemon: PokemonMultipleReducer\r\n});\r\n\r\nexport default RootReducer;","import { createStore } from 'redux';\r\nimport { applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport RootReducer from './reducers/RootReducer';\r\n\r\nconst Store = createStore(\r\n    RootReducer, \r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default Store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/css/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport Store from './redux/Store';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={Store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}